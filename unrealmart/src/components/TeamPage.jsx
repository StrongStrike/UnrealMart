import { motion } from 'framer-motion'
import { useSettings } from '../context/SettingsContext'

const team = [
	{
		name: 'UnrealBot',
		role: 'AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
		bio: '–í—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä. –û–±—â–∞–µ—Ç—Å—è –Ω–∞ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö –∏ –ø—Ä–µ–¥—É–≥–∞–¥—ã–≤–∞–µ—Ç –∂–µ–ª–∞–Ω–∏—è.',
		icon: 'ü§ñ',
	},
	{
		name: 'Vision',
		role: '–ê–Ω–∞–ª–∏—Ç–∏–∫ –±—É–¥—É—â–µ–≥–æ',
		bio: '–ü–æ–Ω–∏–º–∞–µ—Ç —Ç—Ä–µ–Ω–¥—ã –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∏ —Å–ª—É—á–∏–ª–∏—Å—å. –ï–≥–æ –ø—Ä–æ–≥–Ω–æ–∑—ã —Ç–æ—á–Ω–µ–µ –ø–æ–≥–æ–¥—ã.',
		icon: 'üß†',
	},
	{
		name: 'Gifter',
		role: '–ü–æ–¥–∞—Ä–æ—á–Ω—ã–π AI',
		bio: '–ü–æ–¥–±–∏—Ä–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –¥–ª—è –ª—é–±–æ–≥–æ —Å–ª—É—á–∞—è, –æ—Ç –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ –¥–æ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π —Å–≤–∞–¥—å–±—ã.',
		icon: 'üéÅ',
	},
]

export default function TeamPage() {
	const { settings } = useSettings()
	const isLight = settings.theme === 'light'

	return (
		<div
			className={`min-h-screen px-6 py-20 transition-colors duration-500 ${
				isLight
					? 'bg-gradient-to-br from-white to-purple-100 text-black'
					: 'bg-gradient-to-b from-black to-purple-900 text-white'
			}`}
		>
			<motion.h1
				className='text-5xl md:text-6xl font-extrabold text-center mb-16 tracking-widest'
				initial={{ opacity: 0, y: -30 }}
				animate={{ opacity: 1, y: 0 }}
				transition={{ duration: 1 }}
			>
				AI-–ö–û–ú–ê–ù–î–ê UNREALMART
			</motion.h1>

			<div className='grid grid-cols-1 md:grid-cols-3 gap-10 max-w-6xl mx-auto'>
				{team.map((member, i) => (
					<motion.div
						key={i}
						className={`relative text-center border rounded-2xl p-6 shadow-lg backdrop-blur-md group transition-all duration-500 ${
							isLight
								? 'bg-white border-purple-200 hover:shadow-purple-300'
								: 'bg-white/5 border-purple-500/20 hover:shadow-purple-500/30'
						}`}
						initial={{ opacity: 0, y: 60 }}
						whileInView={{ opacity: 1, y: 0 }}
						viewport={{ once: true }}
						transition={{ duration: 0.5, delay: i * 0.2 }}
						whileHover={{ scale: 1.05 }}
					>
						<div className='text-6xl mb-4'>{member.icon}</div>
						<h2 className='text-2xl font-bold mb-1'>{member.name}</h2>
						<p
							className={`text-sm mb-4 ${
								isLight ? 'text-purple-700' : 'text-purple-300'
							}`}
						>
							{member.role}
						</p>
						<p className={isLight ? 'text-gray-700' : 'text-purple-200'}>
							{member.bio}
						</p>

						{/* glow on hover */}
						<div className='absolute inset-0 opacity-0 group-hover:opacity-10 bg-purple-500 blur-xl transition duration-500 rounded-2xl pointer-events-none'></div>
					</motion.div>
				))}
			</div>
		</div>
	)
}
