{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-projects\\\\UnrealMart\\\\unrealmart\\\\src\\\\context\\\\SettingsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/SettingsContext.js\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSettings = {\n  sound: true,\n  magnetic: true,\n  ai: true,\n  theme: 'dark',\n  animations: true\n};\nconst SettingsContext = /*#__PURE__*/createContext();\nexport function SettingsProvider({\n  children\n}) {\n  _s();\n  const [settings, setSettings] = useState(defaultSettings);\n  useEffect(() => {\n    const saved = localStorage.getItem('unreal-settings');\n    if (saved) setSettings(JSON.parse(saved));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('unreal-settings', JSON.stringify(settings));\n\n    // ✅ Применяем тему надёжно\n    const root = document.documentElement;\n    if (settings.theme === 'dark') {\n      root.classList.add('dark');\n      root.classList.remove('light');\n      document.body.style.backgroundColor = '#000';\n    } else {\n      root.classList.remove('dark');\n      root.classList.add('light');\n      document.body.style.backgroundColor = '#f3f3f3';\n    }\n  }, [settings]);\n  const toggle = key => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: key === 'theme' ? prev[key] === 'dark' ? 'light' : 'dark' : !prev[key]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      settings,\n      toggle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n_s(SettingsProvider, \"Wc799zRIYoLkx3R/ul10RMsdhe0=\");\n_c = SettingsProvider;\nexport const useSettings = () => {\n  _s2();\n  return useContext(SettingsContext);\n};\n_s2(useSettings, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","defaultSettings","sound","magnetic","ai","theme","animations","SettingsContext","SettingsProvider","children","_s","settings","setSettings","saved","localStorage","getItem","JSON","parse","setItem","stringify","root","document","documentElement","classList","add","remove","body","style","backgroundColor","toggle","key","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSettings","_s2","$RefreshReg$"],"sources":["E:/my-projects/UnrealMart/unrealmart/src/context/SettingsContext.js"],"sourcesContent":["// src/context/SettingsContext.js\r\nimport { createContext, useContext, useEffect, useState } from 'react'\r\n\r\nconst defaultSettings = {\r\n\tsound: true,\r\n\tmagnetic: true,\r\n\tai: true,\r\n\ttheme: 'dark',\r\n\tanimations: true,\r\n}\r\n\r\nconst SettingsContext = createContext()\r\n\r\nexport function SettingsProvider({ children }) {\r\n\tconst [settings, setSettings] = useState(defaultSettings)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst saved = localStorage.getItem('unreal-settings')\r\n\t\tif (saved) setSettings(JSON.parse(saved))\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('unreal-settings', JSON.stringify(settings))\r\n\r\n\t\t// ✅ Применяем тему надёжно\r\n\t\tconst root = document.documentElement\r\n\t\tif (settings.theme === 'dark') {\r\n\t\t\troot.classList.add('dark')\r\n\t\t\troot.classList.remove('light')\r\n\t\t\tdocument.body.style.backgroundColor = '#000'\r\n\t\t} else {\r\n\t\t\troot.classList.remove('dark')\r\n\t\t\troot.classList.add('light')\r\n\t\t\tdocument.body.style.backgroundColor = '#f3f3f3'\r\n\t\t}\r\n\t}, [settings])\r\n\r\n\r\n\tconst toggle = key => {\r\n\t\tsetSettings(prev => ({\r\n\t\t\t...prev,\r\n\t\t\t[key]:\r\n\t\t\t\tkey === 'theme'\r\n\t\t\t\t\t? prev[key] === 'dark'\r\n\t\t\t\t\t\t? 'light'\r\n\t\t\t\t\t\t: 'dark'\r\n\t\t\t\t\t: !prev[key],\r\n\t\t}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<SettingsContext.Provider value={{ settings, toggle }}>\r\n\t\t\t{children}\r\n\t\t</SettingsContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useSettings = () => useContext(SettingsContext)\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,eAAe,GAAG;EACvBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACdC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE;AACb,CAAC;AAED,MAAMC,eAAe,gBAAGZ,aAAa,CAAC,CAAC;AAEvC,OAAO,SAASa,gBAAgBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACG,eAAe,CAAC;EAEzDJ,SAAS,CAAC,MAAM;IACf,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IACrD,IAAIF,KAAK,EAAED,WAAW,CAACI,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACfiB,YAAY,CAACI,OAAO,CAAC,iBAAiB,EAAEF,IAAI,CAACG,SAAS,CAACR,QAAQ,CAAC,CAAC;;IAEjE;IACA,MAAMS,IAAI,GAAGC,QAAQ,CAACC,eAAe;IACrC,IAAIX,QAAQ,CAACN,KAAK,KAAK,MAAM,EAAE;MAC9Be,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC1BJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,OAAO,CAAC;MAC9BJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;IAC7C,CAAC,MAAM;MACNR,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MAC7BL,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;MAC3BH,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;IAChD;EACD,CAAC,EAAE,CAACjB,QAAQ,CAAC,CAAC;EAGd,MAAMkB,MAAM,GAAGC,GAAG,IAAI;IACrBlB,WAAW,CAACmB,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP,CAACD,GAAG,GACHA,GAAG,KAAK,OAAO,GACZC,IAAI,CAACD,GAAG,CAAC,KAAK,MAAM,GACnB,OAAO,GACP,MAAM,GACP,CAACC,IAAI,CAACD,GAAG;IACd,CAAC,CAAC,CAAC;EACJ,CAAC;EAED,oBACC9B,OAAA,CAACO,eAAe,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,QAAQ;MAAEkB;IAAO,CAAE;IAAApB,QAAA,EACpDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE7B;AAAC3B,EAAA,CA1CeF,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AA4ChC,OAAO,MAAM+B,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5C,UAAU,CAACW,eAAe,CAAC;AAAA;AAAAiC,GAAA,CAA/CD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}